import numpy as np

def split_data(data, target, test_size=0.2, val_size=0.2, shuffle=True, random_state=None):
    '''
    Split the data into training, validation, and testing sets.

    Inputs:
        - data: np.ndarray of shape (n_samples, n_features) representing the dataset
        - target: np.ndarray of shape (n_samples,) representing the target values
        - test_size: float, the proportion of the dataset to include in the test split
        - val_size: float, the proportion of the dataset to include in the validation split
        - shuffle: boolean, whether to shuffle the data before splitting
        - random_state: int or None, random seed for reproducibility

    Outputs:
        - train_data: np.ndarray, training set features
        - val_data: np.ndarray, validation set features
        - test_data: np.ndarray, testing set features
        - train_target: np.ndarray, training set targets
        - val_target: np.ndarray, validation set targets
        - test_target: np.ndarray, testing set targets
    '''
    if shuffle:
        if random_state is not None:
            np.random.seed(random_state)
        indices = np.random.permutation(len(data))
    else:
        indices = np.arange(len(data))
    
    test_size = int(len(data) * test_size)
    val_size = int(len(data) * val_size)
    train_size = len(data) - test_size - val_size
    
    test_indices = indices[:test_size]
    val_indices = indices[test_size:test_size + val_size]
    train_indices = indices[test_size + val_size:]
    
    train_data, val_data, test_data = data[train_indices], data[val_indices], data[test_indices]
    train_target, val_target, test_target = target[train_indices], target[val_indices], target[test_indices]
    
    return train_data, val_data, test_data, train_target, val_target, test_target

# Example usage:
# Generating some synthetic data for the example
np.random.seed(42)
data = np.random.randn(100, 10)
target = np.random.randint(0, 2, 100)

# Split the data into training, validation, and testing sets
train_data, val_data, test_data, train_target, val_target, test_target = split_data(data, target, test_size=0.2, val_size=0.2, shuffle=True, random_state=42)

print("Training data shape:", train_data.shape)
print("Validation data shape:", val_data.shape)
print("Testing data shape:", test_data.shape)
print("Training target shape:", train_target.shape)
print("Validation target shape:", val_target.shape)
print("Testing target shape:", test_target.shape)
